<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxASEBUTExETFRUWFxgXFxgXGRgbHxYYGRobGBsZIRsY
        HSggGSAmGxkbIT0hJisrOi4uGR8zODMtNygtLi7/2wBDAQoKCg4NDhsQEBovJiAmKy0wLS4tLS8rNSsu
        LzctNS0tLystLS0vLTEtLS0tMystLTctLy8uLS0tLy0tLy0tLS3/wAARCADIAPwDASIAAhEBAxEB/8QA
        HAABAAEFAQEAAAAAAAAAAAAAAAUDBAYHCAIB/8QATBAAAgEDAwEFAwUKCwYHAAAAAQIDAAQRBRIhMQYH
        E0FRImFxFDKBkbIIIzM1QlJydKGxFSQ2VGJzg4STs9IYNFOSotFDY2SCwdPw/8QAGQEBAAMBAQAAAAAA
        AAAAAAAAAAECAwQF/8QAKREBAQACAQMCBQQDAAAAAAAAAAECERIDITFBYSIyUZHwcaGxwQQzgf/aAAwD
        AQACEQMRAD8A3jSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSl
        KBSlKBXmSQKCWIAHUngCsd7Q9r7e33RqyyTgcRjJ9ryBx0Pn5cA1hCfKru8jiupZM7susbqFReOm3hRj
        8okk594rPPqzHsvj07e7Y1v2htpGKxOZipw3hqzAH0LAbR9dSin3YqnbW6RoERQqqMADoBVWrzfqrSlK
        VKClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUClKUCsQ7a9ro4A9vEzG5ZQFCDO1mxtB9CR
        k+4DPpmf1vVY7aEySOFGQqk5wWPTpzjzPuBrTtnFdXFmZREpWWaV2uGXDBBjxGd/JSRjA6CPaM+eXVz4
        zs06eO7uqs9sYREZhC6hdwEbAmdicsXkXJKhsrzyxU/ETeoaS4Yu0XhQgJJKQ2SzsAxXJOSdxKgdB1q1
        spLaSN2hhkMltCgjYnIPt4MhjA4bLFsZP7KuNMRYopGnRz4wAVc4ZiDuMmT5A+fOc15+WU9fz9vq6ptm
        PZztJ44kMirGqbSDu4wcjBJ8+KyCKRWAKkEHoQcg1gDWYlt4zbxOFDN4g+cd/GCcdRjPlxzUpaTTWsIT
        GGdi3PO1eB09Sa26f+Vlj8/ea8ss+lL8v2ZdSonTNV3IxkwCuMnyOenHrV7aX0cmdjZI6jofqNdePVxy
        k1fLC4WeVzSlK0VKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQa17yLyJ761tp0MkLhkCo4
        DeJJ7LPxyCkZ4Hn4vurFdBkWVLl5ZTBC0XgpgMQCWVkjVR84Kq8/HJ6141u4CXM2pCdGlildUhOSY5Hk
        dInPkV8KPdj1UVdSxXd9a2cyW4I++xsIUCr4nifOKrwu4Y59Qa4+tvzPs6unrwup/wCJJHHbzljMiyvK
        vs7lyQqDzUDBJ8yT7sVNsontoJJ7jbJ7SjcCxdN3DezzxyM+dWFzcwwLFbPbRzPAMOzMRhmO5kBXqATj
        nPOeKvdZs5ZZVmiiYxSImwKM7AABswOmCDXH1PF138du/b8rWem+3uv7xRFHHHFIWjYFyw43tnB+rA4q
        /wBPCmE+LuIBwnrkjkDPl0qzEjW0CQvGpdsyEMAdgPAHx4qSsJzcLsIVSntDAwMdCCB061Sf7Neuvl/o
        vy+2/L6ER4/DRSGzu5Od2AeM/A1506ylSQvtxtVjg/lHBwMfH91XFpBgkh1LAHaAc5ODUPLKwO7J3eue
        c1pvjxyynf2V1vclWses3EcgfxGbkZU8hh6Y8voqY1TtikMxj8IsqnDNnBB88DHOPjVnrN7HFIpECGQB
        WctnAYgH5oOM++ovUrJLlGuhIkILYlD59l+OVwCWyOcVbHPqYbxxy3d/nkuOOWrZqM7bWLYeHmaMGUAo
        CwG4HpjNX1aZ7Y2wIieBjLF4axBlB4dM5UjqpOc499Xj9sru01HZOWaNLZQ0XHzhbiXd+kXyM+/3V2Yd
        fdsyjG9HtuVtqlULC6WWKOVfmyIrj4MAw/Yar10sClKUClKUClKUClKUClKUClKUClKUClKUCvjdK+0o
        OdFCfxufUFnWO5+TiNolXLSEbwyh8KdqK2f0sdTVXtHqDQXEcdtNItvDHE1uQxG4OokMpxgEs7Nn4Y8q
        9a1Z3F1c3tijki1k8eBJHAAVcQyIGYgKPaDAcDI99X2oaqlg1naXFjDPJbRIZGYnIMhMmxSOCFBHXIz6
        VzZx0y903qunwvPHJJfRQPOkcksbgkxu6gtyOACecMRVfXtTeKc26swihCqgBxkbQd/HUkknNY12h0ye
        S5a4jjlkiuT40TqjNlX5CHAOGX5uPdWRapex28Ntbz2qy3CRDezMy7ASSqZQ5bA9/FcnUxlmWu3v9W2P
        p6+yatbmOa1Es8hVkYojYyXGAcY/KxnrV9p8kJhcQszSYGQwwSoPIABP76g3kN/Aht4gjW+Q0Knja/Rl
        zjPKnirvs9p9xEWnkQqsSs2D1YhTxjy+NZzG85qbmvm/m/8AEXXG99d/C9tizsAgO7P1e/3VW1PVtshK
        IgKnG4qCSRwT9dQ47Szlt3iY9wAx9XnV1q3yYpHM8jRtKocoq7s56sMkbQT60ws4WYX79jKfFOUNQjju
        IjctKsRB2PkEhiBwVA5zjHHuqJ1eCN7NRau0vhuzTAKQ2XACtt67Rgj6ar6xGs9tH8jV3WIt4iY9sFsE
        OQOucEcVH2MV1ZW094UaMlVijDDBy7AFyp6YHTPmavx3l3nmd6S9vPr2i0jmu7PT5pRvi8eSONSQQQAG
        ZmGemeFz8ajItVheGBrmNpbiVpbVJSx4iYBA7fnlWlwPcD6Cqmi6xvW6+WGSe3EW91Zmz4u9RHtbPsMS
        SMjyz6VI9mdFXVDaTRxpbxWUrK8YLNvwyzKQx5JLcHPx91b9KeNK53W9todmbF7eytoJCC8UEUbEcjci
        BTg+YyKk6UrucZSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKDTvezp4Sd41gQtfJiOUcP4kbI/gHyKv
        syPPc3pWIWMVtc6fHNdXLwSQym2VzG0viJgSBSow2Y9xGc8Agelbt7ednEvbYAhvEhcTRFMbg6eQzxkj
        IwfPHTrWmb/VJtQuWspZQRJM8llI6hNjsT95fAyAfwZzkq6jqKyzxbYXaW7T6vLbm2itbqX5KtungvGx
        XxCCQ7Hbj2t3VT044qRUx31mLu4uFhljfwGdlJE2AGXhedwBxx6dKi7K2ksdJuDPBbXA+UoEQuJBExBV
        nJjbK5wFxkc9a+Wt+NVt0s4YYoJ4N0kSJkRzKfnrzkq/Q8k5weRXPlhve/X0bTLWv5ZDb+HDp8z2lz4s
        hKeMVDIUjGein2gMnlvfUX2a1CX5TGIiSzMAVzkOCfaBHmMZ61V7D6JeW08lzIgCwRSlow6M0nsHCbUJ
        4zzz6Co+x7wLmOUypHbqDyUWNVBHXG4e19Oaxy6c+G3svLvcndkmp6jp0dwwjgeRVbB++bUJHUAYJIz7
        6q65aSXgF1bLmMqFKkqpiKcEe0QMe8etQ2u6TaRusnyxYlmUS+EyM7xh/axhfLnjOKdqYv4rbraF5rUA
        7mUE5nzlt4A9k4xgGouF+KZTt7Imu1l+6+uUnsLBpVkXfO6xlo2DeGoDHG5TjcT6dKhuzGpbflEk+6S1
        WIiZGJId2IEa8/lFuc+WCaqaXPNp9nNNNBkXBWOKKVeGIyxkZD5Ace/PpzV32NMurQ3FnLtSFdjq0Uap
        4cm7IAAGGyAeDz760ww7zX08fn1Le1391t2dH8KQ3FjFBDbAbZ1dA55VtoWQsSX4JweMY6VtDsf2dSwt
        VgVt5yWdyMb3bqceQ6AD0Arx2R7KwafEUiLMznLyNjLEdBxwAPT3mp6uzp4anfy5epnu9vBSlK0ZlKUo
        FKUoFKUoFKUoFKUoFKUoFKUoFKUoFKUoFa47b9nTbNLf20UUh3LMY5I94SVCMyIQQY9y8EjzVT6kbHr4
        RSpl05s7O2czzfKLSNWgeQR3EEjqNgc5MT7yN64JKuPTyIqWGpabYX91CLa4hIWWBZ/FLtFvXHiCPaD0
        IIO4nHTrWcdue7/xLeUWccR34Lwsqru2ksNkuMoVJJAOV5IwAa1ymmLFbyLfKkjhcWyzmaGVJFIzA0gG
        3btJKgtgnoRk4yuOm8zl8vmndltWhuI2giYkkNHMjLsdTyG3Z+aRyQfLyqT7WazZW+oSImmwkxOA+9pA
        rvgEkRg7VHPHBz1xULeuNSdVQLZy2tvjwZXbw/Ci53o5GUIBydw54INXl3dKdOibZaajcIzCSUeJI0EI
        x4avgq7jJb2jkDpWfD6LbXvaK1S7VdSW5hgS5JBjmZgyPFiJgmxSZF9nPAGM1U1K4ntLCFLGdpo5mdp5
        oA34QBQIuPajAXnnBb9lXGkdmJtcto5WVbIwDwU2RHwpY/nZRCwKkEkEgkGtndieykWm25iR2dmbe7tx
        ubAHAHQADp+2pnT3dq5dTU1+zEe77sxNc2ci6kkjRs6vCkrOHTAILDncmc4xx0PHNbD0nSoLaMRQRrGg
        8h5n1JPJPvNXlK2xxkY5Z3IpSlWVKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKUpQKV4llVVLMQqg
        ZJJwAPUk9Kxa47ydGRtrX8Oens7mH1qCKDLKjta0K1u02XECSr/SHI+BHI+g170nWba6Tfbzxyr5lGBx
        8cdPpr1quq29tH4lxMkSZC7nIUZPQZPwoMO1Pu3+9LHaXs9sE3bVyXUBsZTGRlePmnP7TVx2M7u7WxdZ
        yqtcqGUyJuRSG4P3vdtBx6AfCsp0rVbe5j8SCZJUyV3IQwyOoyPjV5UaieVKVCaj2u06CQxTXtvHIuNy
        NIoIyMjIzxwc1L206yIrowZWAZSOhB5BH0VKFSlQ9z2qsI5/k73cCzblXwy4DbmxtGOuTkfXUs7hQSTg
        AZJ9AKD1SojSe09hdOY7e7hlcKWKo4Y7QQCcDyyR9dS9ApSofVe1NhbSeHcXcET4DbXcKcHocHy4NBMU
        r4rAjI6GvtApSoHWu2em2jbLi8hRx1XOWHxVckUE9SoDRu2mm3bbILyF3PRc7WPwVsE1P0ClKUClKUCl
        KUClKUClKUClKUGgO/DXbm61GPS4WwgMYK5xvmkII3H0AK4HlyfTE9ZdwVmIx4t3cGTHJj2KufcGUnH0
        1jvfr2euLbUF1KEHY/hkuOfDmjwFz5AEKuD6gj4512C73LO9VYrhlt7jgYY4SQ9PZY9CfzT68ZoIPsj3
        Y3Wl6zBMknjWpEqsw9krmN9odc4I3beRnnHA4qZ+6E/E/wDbx/uetlg1rT7oT8T/ANvH+56D79z5+J/7
        eT9y1c96/eImmxeDCQ13IPZHURKePEb/AOB5/CsB7FdvYtL7P+zte5kml8KPPThAXb0UftPHqRb92HYO
        bVbhtQvyzwly3t5zcP8A/WOnHpgdDQXfdD3ePdyDUr8FkLb41fkzPnPiNnquen53w679r4igAAAADgAe
        Q9K+0HM/br+Vn96tPsw10dqv4CX+rf7JrnHt1/Kz+9Wn2Ya6O1X8BL/Vv9k0HPH3Ov42k/VZP8yKuka5
        u+51/G0n6rJ/mRV0jQK5q+6F/G4/V4/tPXStc1fdC/jcfq8f2noOj7P8Gn6K/uFVqo2f4NP0V/cKrUGB
        983aeSw00mFtssziJGHVAQSzD0OBgHyJrW3d33Qrf2wu7u4kUSklFjxuIyQXZnB6nyx9PNbI75+y8t/p
        xEI3Swt4qqOrgAhlHqcHIHmRjzrW/dV3prYxiyvVbwlYhJACTFk5KsvUjOenIzjHoF/2o7imjjMlhcO7
        rz4cu0M2OfZdQAD7iB8RW6tGVhbQh87hEgbd13bRnOfPNe9O1CG4jEsMqSRt0ZCCD9I/dVzQKUpQKUpQ
        KUpQKUpQKUpQKUpQUrq2jlRo5EV0YEMrAEMD1BB4IrSvb7uTBDT6ccHkm3Y8H9Bj0/RP1is4ue8a1t9T
        lsbpliwEaKU8IQyglXJPsnOeemPTzzD5ZFs3+ImzGd24Yx65zig0P3Nd4FxDcrpt2XZGYxxl87oZB+Qc
        87SRtx5HHlWZ/dCfif8At4/3PWstduYb7tRG1nhla4h9pejmMgu49R7JOfPGa2b90J+J/wC3j/c9Bq/s
        93bnUNG+VW2flKSyKUJ4mQBSAM8KwycevT31Pd03eebUrYX5KxqdkcjAgwkHHhuPJQeMn5vnx0zP7nz8
        T/28n7lqj3td2C3ytdWqhboD2l4AnA8j6P6N59D5EBtBSCMivtc+d1PeY9k4sL8sIQdiO+d1u2cbGzzs
        z/y/Dp0CjggEEEEZBHIIPnQc09uv5Wf3q0+zDXR2q/gJf6t/smuce3X8rP71afZhro7VfwEv9W/2TQc8
        fc6/jaT9Vk/zIq6Rrmr7nudE1WQuyqPk0gyxA58SL1rov+Erf/jRf86/96C6rmr7oX8bj9Xj+09dGx30
        LEBZYyT0AZST9ANc5fdC/jcfq8f2noOj7P8ABp+iv7hVao+z1KDw0+/RfNX8tfT41W/hK3/40X/Ov/eg
        uqwHt53WWWo7pV+8XB58RBw5/pr+V8Rg/GpLtx2zj06K3nIEkMk3hyFTkhSrHcvOCQVHHpmpvRtdtbuM
        SW88cikfksMj3EdVPuNBzRb3Oq9nL4K2QDyUyTFcJnGR5Z464yv7D03omqR3VvFcRHKSoHX3ZHQ+8Hj6
        K1B90ZrFo8EFuro9wsu8hSCUj2sCDjplivH9Gs67n7OSLRbRZM5Ks4B8ld2df+lhQZlSlKBSlKBSlKBS
        lKBSlKBSlKDX/eD3V2upuZxI0NxgAuBuVgBgZUkfWCPprXbdw2oZ2i7tymf/ADB/04x+2t/x3KM7IHUu
        mNygjK7umR5Zr5dXUcS7pHVFyBliAMk4AyfUkCmxhPdz3ZW+lkyl/GuCMeIRgID1Crk4z6nn4VJd5HZR
        9TsvkyyrEfEV9zKW4UMMYBHrWUO4UFiQABkk+QHOa+QzK6hlYMrAEEHIIPIIPnQYz3cdlH0yy+TNKsp8
        Rn3KCvDAcYJPpWU1F3faOyicxyXUCOvVWdQRxnkE+lV9O1a2uN3gzRy7cbtjBsZ6Zx06VHKeNp43zphP
        eP3WwamwmjcQXHAZ9uRIvT2gCOR+d9B8sSXd32ZvtOi8Ca7S4hA+9jawaP8AogknK+7y8qyfUNSggUNN
        Kkak4BdgoJ64ya86dqtvcAmGaOULgNsYNjPTOOlNzejV1trjX+6mW41j+EBdIq+LDJ4ZQk4iCDGc+ez9
        tbNvId8bpnG5WXPpkYqnqGowwKGmlSNScAuwUE8nGT7gfqr3Z3kUyb4pEkU/lIQR9YpueDTRf+z9P/P4
        v8Jv9VP9n6f+fxf4Tf6q3vcToiM7sFVQSzE4AA5JJPQV6jcMAykEEZBHIIPQ1KGouxPc5LYX8N015HII
        ixKiMgncjJ1LcfOzV93kd1UuqXouVukiAjWPaULH2SxzkEfnVsy2uUkXcjqy5IypyMg4IyPQgivcjhQS
        SAAMknyA6mg0N/s/T/z+L/Cb/VT/AGfp/wCfxf4Tf6q3vbzpIiujBlYAqwOQQehBHWqGo6pb24BmmjiD
        HALsFyeuBn3VG55Tr0Yja928D6PDpt0xk8IuyyR5QqzO7BgCT0D4wcg1ru+7hLpXJt72Jl8t6shA9PZ3
        Zrc9v2msZHVEu4GdjhVEikknyAB5qVZgASTgDkn0pLL4LLPLTHZTuKWOVZb6dZQpz4UYIVj/AEmPJHuA
        GfWtzooAAAAA4AHkKp21wkiK6MrowBVlOQwPQgjqK83l5FEheWRUQdWYgAfSanaFelWOmaxbXAJgnjlx
        12MDj446VfVEu02aKVRtbqOVd0bq65IypBGQcEZHoa+xXKMzKrqWQgOAQSpIyAR5cEGp2hVpSqNtdxyb
        tjq21ijbSDtZeqnHQj0oK1KVStbmORd0bq65IypBGVOCMj0II+igq0pSgUpSgxrRvxpffoW/2Wrx3kRh
        rAqwyrTWykeoaeMEfUanLfTY0nlmGd8oQNzx7AIGB5daatpsdxH4cmdu5H4OOY2Dr/1KKpx+Gz9WkynK
        X9GJy3cliklncMWheOQWszfonEDn84Dofyh76yHsj/uFr/URfYFXeraZDcwtDMgZHGCP3EHyI9aq2Nos
        MSRJnaihFzycKMDmmONl9jLKWe7G+8m3T+D5W2Lu3wc4Gfw8Y6/CsnhgRfmqq564AGfqq21jTI7mFoZc
        7GKk4ODlGDjn4qKvamY/FarcvhkYn28377HZGsjfKuEY7Qx8OTgnBx9RqZ0Px9reNbRQHPAjfeGGOpOx
        cc191vRY7oIHaRTG+9GjYqQ2Cucj3E160nShb7sTTybsfhZC+MZ6Z6darMbytWuU46QXeCW/iWxFdvlk
        e1WO0MdknBODj6jVLsHkz3zOqwzNIm+3XpEFUhXzgBt453Dg491ZLqOmRzmIvnMMglTBx7aggZ9RhjxX
        mTSYjcrc+0sqoUJU4DoecMPysHkenNOF5ck85x4rLtycaZeH/wBPL9g1CaXK2meErkmxmCbGPPyWRgPY
        Yn/w2Y8H8knHSsu1OxSeGSGTOyRGRsHB2sMHny4NfZbKNojCyhoyuwq3OVxjB+ipyxtu4jHOTHVQnd9/
        uK/1k/8AnPVt3h6hthS2Acm5fa4jVnYQDBlYKvJ9n2f/AHVPaJpMVrAsEQIRc4ycnkljyfea+jS4vlPy
        k5Mnh+EMnhUzuOB5EnGT7hUcbw4nKc+TGO7+/VWmswsqpG3iW4lRkYwuSduHAJ2PkZ9CKzCWFG+cqt8Q
        D++rW50uN54pzkSRBwpBxlXA3KR+UOAfiKvqnHHU1UZ5S3cYp2Bto/AlOxci7ucHAyMStisi1L8DJ+g/
        2TXjStMjt0ZI84aR5Dk59qRizfRk9KuZowylT0YEH4EYqccdY6RllvLaC7vvxVZ/q8f2RVjcQJNrOycB
        lit1kt0bkF2ZlkcA8FgAo92ayTSrBLeCOCPOyNQi5OTgDA586ttZ0KC6C+IGDIcpIjFHQnrtZTkZ9Ohq
        LLqLcpyt+qD7YW0UU1nPEqpcG4jiXaADJG2fEQ4+cu32vdgVlxqG03s1BDL4xaWWUDarzSM5QHqFzwuf
        UCpqmM81GVl1GtOzcc1nbLexBpIXaT5VCOSMSMBOg/OAxlfMD1FZD2PuUlur+SNgyPLCysDkEGBOantK
        06O3iEUedoLEZOT7RLHn4k1Q0XQbe0MpgXYJX3sueA2McD8ke6q44WaWyzl28dqtW+S2kkoGXA2xr1LS
        OdqKB5+0RWF9irlbS7SECcJcxqHaaJ4912oJZgXAB3rngfmCs9v9LjmeJ33HwX8RBnA3YIBI88ZOPfTV
        tLjuECSbvZdZFKnBV0OQQf8A9wTU5Y23ZjnJjr6r2sZ7u/8AcR/XXP8AnyVk1Y5bdj4Y/wAHcXaLuL7V
        mYLlmLHgcYJJ499Wsu5YrLNWVkdKUqyhSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKBSlKB
        SlKBSlKBSlKBSlKD/9k=
</value>
  </data>
</root>